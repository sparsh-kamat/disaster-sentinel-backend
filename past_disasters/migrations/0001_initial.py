# Generated by Django 5.1.5 on 2025-04-21 14:04

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PastDisaster',
            fields=[
                ('latitude', models.DecimalField(decimal_places=7, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=9)),
                ('title', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('month', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=100)),
                ('disaster_type', models.CharField(max_length=100)),
                ('total_deaths', models.IntegerField()),
                ('total_injured', models.IntegerField()),
                ('total_affected', models.BigIntegerField()),
                ('loss_inr', models.BigIntegerField()),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'past_disasters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GdacsDisasterEvent',
            fields=[
                ('eventid', models.CharField(help_text='Unique GDACS Event ID (used as PK)', max_length=50, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(help_text='Title of the event from the feed.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the event.', null=True)),
                ('link', models.URLField(help_text='Link to the GDACS event page.', max_length=512)),
                ('pubDate', models.DateTimeField(blank=True, help_text='Publication date from the feed.', null=True)),
                ('latitude', models.FloatField(blank=True, help_text='Latitude coordinate.', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='Longitude coordinate.', null=True)),
                ('state', models.CharField(blank=True, db_index=True, help_text='State/Province determined via reverse geocoding (if available).', max_length=100, null=True)),
                ('eventtype', models.CharField(db_index=True, help_text='Type of event (e.g., EQ, TC, FL).', max_length=50)),
                ('alertlevel', models.CharField(blank=True, db_index=True, help_text='Alert level (Green, Orange, Red).', max_length=20, null=True)),
                ('severity', models.CharField(blank=True, help_text="Severity description (e.g., 'M 7.1').", max_length=100, null=True)),
                ('population', models.CharField(blank=True, help_text='Affected population estimate (textual).', max_length=50, null=True)),
                ('country', models.CharField(blank=True, db_index=True, help_text='Country name(s).', max_length=100, null=True)),
                ('iso3', models.CharField(blank=True, db_index=True, help_text='ISO3 country code.', max_length=10, null=True)),
                ('fromdate', models.DateTimeField(blank=True, help_text='Start date/time of the event.', null=True)),
                ('todate', models.DateTimeField(blank=True, help_text='End date/time of the event.', null=True)),
                ('iscurrent', models.BooleanField(db_index=True, default=True, help_text='Flag indicating if the event is currently listed as active by GDACS.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'GDACS Disaster Event',
                'verbose_name_plural': 'GDACS Disaster Events',
                'ordering': ['-pubDate', '-fromdate'],
            },
        ),
    ]
